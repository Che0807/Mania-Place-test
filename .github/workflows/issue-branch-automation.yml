name: Issue Branch Automation

on:
  issues:
    types: [opened]
  pull_request:
    types: [closed]

jobs:
  create-branch:
    if: github.event_name == 'issues' && github.event.action == 'opened'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract branch prefix from labels
        id: extract-prefix
        run: |
          LABELS=$(echo '${{ toJson(github.event.issue.labels) }}' | jq -r '.[].name')
          PREFIX="feat"  # 기본값

          for label in $LABELS; do
            case "$label" in
              "bug"|"fix") PREFIX="fix" ;;
              "feature"|"enhancement") PREFIX="feat" ;;
              "refactor"|"refactoring") PREFIX="refactor" ;;
              "chore"|"maintenance") PREFIX="chore" ;;
              "docs"|"documentation") PREFIX="docs" ;;
              "hotfix") PREFIX="hotfix" ;;
              "test"|"testing") PREFIX="test" ;;
            esac
          done

          echo "prefix=$PREFIX" >> $GITHUB_OUTPUT

      - name: Sanitize title and create branch name
        id: create-branch-name
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          PREFIX=${{ steps.extract-prefix.outputs.prefix }}
          ISSUE_TITLE="${{ github.event.issue.title }}"

          SANITIZED_TITLE=$(echo "$ISSUE_TITLE" | \
            tr '[:upper:]' '[:lower:]' | \
            sed 's/[^a-z0-9가-힣]/-/g' | \
            sed 's/--*/-/g' | \
            sed 's/^-\|-$//g' | \
            awk '{ if(length($0)>50) print substr($0, 1, 50); else print $0 }')

          # 제목이 비어 있으면 기본값 설정
          if [[ -z "$SANITIZED_TITLE" ]]; then
            SANITIZED_TITLE="issue"
          fi

          BRANCH_NAME="${PREFIX}/${ISSUE_NUMBER}-${SANITIZED_TITLE}"

          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "sanitized_title=$SANITIZED_TITLE" >> $GITHUB_OUTPUT

      - name: Debug branch values
        run: |
          echo "Original title: ${{ github.event.issue.title }}"
          echo "Sanitized title: ${{ steps.create-branch-name.outputs.sanitized_title }}"
          echo "Branch name: ${{ steps.create-branch-name.outputs.branch_name }}"

      - name: Create and push branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git fetch origin
          if git show-ref --verify --quiet refs/remotes/origin/develop; then
            BASE_BRANCH="develop"
          else
            BASE_BRANCH="main"
          fi

          git checkout -b "${{ steps.create-branch-name.outputs.branch_name }}" origin/$BASE_BRANCH
          git push origin "${{ steps.create-branch-name.outputs.branch_name }}"

      - name: Add branch info to issue
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            🚀 **브랜치가 자동 생성되었습니다!**

            **브랜치명**: `${{ steps.create-branch-name.outputs.branch_name }}`

            ### 다음 단계
            1. 로컬에서 브랜치 체크아웃:
               ```bash
               git fetch origin
               git checkout ${{ steps.create-branch-name.outputs.branch_name }}
               ```
            2. 작업 완료 후 PR 생성
            3. PR이 머지되면 브랜치와 이슈가 자동으로 정리됩니다

            > 💡 **팁**: PR 제목에 `closes #${{ github.event.issue.number }}` 또는 `fixes #${{ github.event.issue.number }}`를 포함하면 이슈가 자동으로 닫힙니다.

      - name: Add labels to issue
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            ---
            🏷️ **브랜치 정보**
            - **타입**: `${{ steps.extract-prefix.outputs.prefix }}`
            - **브랜치**: `${{ steps.create-branch-name.outputs.branch_name }}`
            - **상태**: 🔄 진행 중

  cleanup-after-merge:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract issue number from branch name
        id: extract-issue
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

          ISSUE_NUMBER=$(echo "$BRANCH_NAME" | grep -oE '/[0-9]+' | sed 's/\///')

          if [[ "$ISSUE_NUMBER" =~ ^[0-9]+$ ]]; then
            echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
            echo "has_issue=true" >> $GITHUB_OUTPUT
          else
            echo "has_issue=false" >> $GITHUB_OUTPUT
          fi

      - name: Delete merged branch
        if: steps.extract-issue.outputs.has_issue == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH_NAME="${{ steps.extract-issue.outputs.branch_name }}"
          git push origin --delete "$BRANCH_NAME" || echo "브랜치 삭제 실패 또는 이미 삭제됨"

      - name: Close related issue
        if: steps.extract-issue.outputs.has_issue == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ steps.extract-issue.outputs.issue_number }}
          body: |
            ✅ **작업이 완료되었습니다!**

            **PR**: #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}
            **브랜치**: `${{ steps.extract-issue.outputs.branch_name }}` (삭제됨)
            **머지 시간**: ${{ github.event.pull_request.merged_at }}

            이 이슈는 자동으로 닫힙니다. 🎉

      - name: Close issue
        if: steps.extract-issue.outputs.has_issue == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_NUMBER=${{ steps.extract-issue.outputs.issue_number }}
          gh issue close $ISSUE_NUMBER --reason completed
